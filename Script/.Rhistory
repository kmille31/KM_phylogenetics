KMtree<-read.tree("../Data/20160623_Katie_NJ_tree_N6_3SNP_ANBE_mod.nwk")
library(ape)
library(geiger)
library(ade4)
library(adephylo)
KMtree<-read.tree("../Data/20160623_Katie_NJ_tree_N6_3SNP_ANBE_mod.nwk")
plot(KMtree)
tree2<-read.tree("../Results/20160623_Cipres_RaxML_output/20160623_BL_tree_parsed.newick")
plot(tree2)
KMtree3<-drop.tip(tree2,c("ABP3","BRP7","BEAR4","CGYM12"))
length(tree2$tip.label)
length(KMtree3$tip.label)
bl2<-cophenetic(KMtree3)
KMpcoa2<-pcoa(bl2)
biplot(bl2)
biplot(KMpcoa2)
plot(KMpcoa$vector[,1],KMpcoa2$vector[,1])
KMpcoa
KMpcoa
KMpcoa<-pcoa(bl)
KMtree2<-drop.tip(KMtree,c("ABP3","BRP7","BEAR4","CGYM12"))
length(KMtree2$tip.label)
bl<-cophenetic(KMtree2)
KMpcoa<-pcoa(bl)
knitr::kable(KMpcoa$values[1:10,])
plot(KMpcoa$vector[,1],KMpcoa2$vector[,1])
text(KMpcoa$vector[,1],KMpcoa2$vector[,1],tip.label=KMtree3$tip.label)
KMtree3$tip.label
text(KMpcoa$vector[,1],KMpcoa2$vector[,1],label=KMtree3$tip.label)
text(KMpcoa$vector[,1],KMpcoa2$vector[,1],labels=KMtree3$tip.label)
?text
KMtree3$tip.label
plot(KMpcoa$vector[,1],KMpcoa2$vector[,1])
text(KMpcoa$vector[,1],KMpcoa2$vector[,1],labels=KMtree3$tip.label)
library(ape)
KMtree<-read.tree("../Data/20160623_Katie_NJ_tree_N6_3SNP_ANBE_mod.nwk")
plot(KMtree)
#excluding
#ABP3,BRP7,BEAR4,CGYM12
length(KMtree$tip.label)
KMtree2<-drop.tip(KMtree,c("ABP3","BRP7","BEAR4","CGYM12"))
length(KMtree2$tip.label)
bl<-cophenetic(KMtree2)
# pcoa of distance matrix
KMpcoa<-pcoa(bl)
#exploring the pcoa's
knitr::kable(KMpcoa$values[1:10,])
#plotting the first and second axis
plot(KMpcoa$vectors[,1],KMpcoa$vectors[,2])
text(KMpcoa$vectors[,1],KMpcoa$vectors[,2],labels=KMtree2$tip.label)
#the eigenvectors
#KMpcoa$vectors[,1:10]
#write.csv(KMpcoa$vectors[,1:10],"20160623_KM_eigenvectors.csv")
#code for merging eigenvectors into dataset
#setting as dataframe
pcoa.dat<-as.data.frame(KMpcoa$vectors[,1:10])
##This is important, setting a new column with the names of tip labels
pcoa.dat$colony_id_name<-KMtree2$tip.label
knitr::kable(head(pcoa.dat[1:4,]))
#merging dataset with ant_dat_clim
knitr::kable(KMpcoa$values[1:10,])
Full_data <-read.csv("../Data/TOTAL_FINAL_DATA_SET_KMBE_v2_07-22-2016.csv")
library(dplyr)
names
names(Full_data)
pcoa.dat<-as.data.frame(KMpcoa$vectors[,1:10])
##This is important, setting a new column with the names of tip labels
pcoa.dat$colonyID<-KMtree2$tip.label
knitr::kable(head(pcoa.dat[1:4,]))
Final.dat1<-inner_join(Full_data,pcoa.dat,by="colonyID")
dim(Full_data)
dim(Final.dat1)
pcoa.dat$colonyID2<-KMtree2$tip.label
knitr::kable(head(pcoa.dat[1:4,]))
Final.dat1<-inner_join(Full_data,pcoa.dat,by="colonyID2")
dim(Full_data)
dim(Final.dat1)
Rename<-read.csv("../Results/20160623_KM_eigenvectors.csv")
Final.dat1<-inner_join(Full_data,Rename,by="colonyID2")
dim(Full_data)
dim(Final.dat1)
76-12
names(Final.dat1)
library(MuMIn)
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.4+Axis.5+MAT*Axis.1+MAT*Axis.2+MAT*Axis.3+MAT*Axis.4+MAT*Axis.5+DRT*Axis.1+DRT*Axis.2+DRT*Axis.3+DRT*Axis.4+DRT*Axis.5+APS*Axis.1+APS*Axis.2+APS*Axis.3+APS*Axis.4+APS*Axis.5+MAP*Axis.1+MAP*Axis.2+MAP*Axis.3+MAP*Axis.4+MAP*Axis.5+CN.colony.mass*Axis.1+CN.colony.mass*Axis.2+CN.colony.mass*Axis.3+CN.colony.mass*Axis.4+CN.colony.mass*Axis.5)
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.4+Axis.5+MAT*Axis.1+MAT*Axis.2+MAT*Axis.3+MAT*Axis.4+MAT*Axis.5+DRT*Axis.1+DRT*Axis.2+DRT*Axis.3+DRT*Axis.4+DRT*Axis.5+APS*Axis.1+APS*Axis.2+APS*Axis.3+APS*Axis.4+APS*Axis.5+MAP*Axis.1+MAP*Axis.2+MAP*Axis.3+MAP*Axis.4+MAP*Axis.5+CN.colony.mass*Axis.1+CN.colony.mass*Axis.2+CN.colony.mass*Axis.3+CN.colony.mass*Axis.4+CN.colony.mass*Axis.5, data=Final.dat1)
sum.mod<-dredge(c.mod)
summary(c.mod)
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.4+Axis.5+MAT*Axis.1+MAT*Axis.2+MAT*Axis.3+MAT*Axis.4+MAT*Axis.5+DRT*Axis.1+DRT*Axis.2+DRT*Axis.3+DRT*Axis.4+DRT*Axis.5+APS*Axis.1+APS*Axis.2+APS*Axis.3+APS*Axis.4+APS*Axis.5+MAP*Axis.1+MAP*Axis.2+MAP*Axis.3+MAP*Axis.4+MAP*Axis.5+CN.colony.mass*Axis.1+CN.colony.mass*Axis.2+CN.colony.mass*Axis.3+CN.colony.mass*Axis.4+CN.colony.mass*Axis.5, data=na.omit(Final.dat1))
summary(c.mod)
sum.mod<-dredge(c.mod)
?dredge
summary(c.mod)
library(MASS)
summary(stepAIC(c.mod,direction="both"))
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.4+Axis.5, data=na.omit(Final.dat1))
summary(c.mod)
A
summary(stepAIC(c.mod,direction="both"))
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.1*DRT+Axis.1*APS+Axis.2*DRT+Axis.2*APS+Axis.3*DRT+Axis.3*APS, data=na.omit(Final.dat1))
summary(c.mod)
sum.mod<-dredge(c.mod)
summary(stepAIC(c.mod,direction="both"))
c.mod<-lm(C.percent.colony~MAT+DRT+APS+MAP+CN.colony.mass+Axis.1+Axis.2+Axis.3+Axis.4+Axis.5+MAT*Axis.1+MAT*Axis.2+MAT*Axis.3+MAT*Axis.4+MAT*Axis.5+DRT*Axis.1+DRT*Axis.2+DRT*Axis.3+DRT*Axis.4+DRT*Axis.5+APS*Axis.1+APS*Axis.2+APS*Axis.3+APS*Axis.4+APS*Axis.5+MAP*Axis.1+MAP*Axis.2+MAP*Axis.3+MAP*Axis.4+MAP*Axis.5+CN.colony.mass*Axis.1+CN.colony.mass*Axis.2+CN.colony.mass*Axis.3+CN.colony.mass*Axis.4+CN.colony.mass*Axis.5, data=na.omit(Final.dat1))
summary(c.mod)
library(MASS)
summary(stepAIC(c.mod,direction="both"))
names(Final.dat1)
princomp(Final.dat1[,8:10])
clim.pca<-princomp(Final.dat1[,8:10])
summary(clim.pca)
clim.pca$loadings
clim.pca$loadings[,1:3]
clim.pca<-princomp(scale(Final.dat1[,8:10]))
summary(clim.pca)
clim.pca$loadings[,1:3]
clim.pca<-princomp(scale(Final.dat1[,8:11]))
summary(clim.pca)
clim.pca$loadings[,1:3]
names(Final.dat1)
Final.dat1<-cbind(Final.dat1,clim.pca$scores[,1:3])
names(Final.dat1)
ef<-lm(C.percent.colony~Axis.1+Axis.2+Axis.3+Axis.4+Axis.5,data=Final.dat1)
ef<-lm(C.percent.colony~Axis.1+Axis.2+Axis.3+Axis.4+Axis.5,data=Final.dat1);summary(ef)
c.mod<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2,data=Final.dat1)
summary(c.mod)
summary(stepAIC(c.mod,direction="both"))
clim.pca$loadings[,1:3]
summary(clim.pca)
summary(stepAIC(c.mod,direction="both"))
ef<-lm(C.percent.colony~Axis.1+Axis.2+Axis.3+Axis.4+Axis.5+CN.colony.mass,data=Final.dat1);summary(ef)
summary(stepAIC(c.mod,direction="both"))
sum.mod<-dredge(c.mod)
c.mod<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2,data=na.omit(Final.dat1))
summary(c.mod)
sum.mod<-dredge(c.mod)
c.mod<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2+CN.colony.mass,data=Final.dat1)
summary(c.mod)
# model selection: use dredge function from MuMIn package to grab AIC rankings of subset models
sum.mod<-dredge(c.mod)
summary(stepAIC(c.mod,direction="both"))
na.exclude(Final.dat1)
new<-na.exclude(Final.dat1)
dim(new)
c.mod2<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2+CN.colony.mass,data=new)
sum.mod<-dredge(c.mod2)
c.mod2<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2+CN.colony.mass,data=new)
summary(c.mod2)
dim(Final.dat1)
Final.dat1
str(Final.dat1)
Final.dat1$C.percent.colony
write.csv(Final.dat1,"Final_dat1.csv")
new<-na.omit(Final.dat1)
c.mod2<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2+CN.colony.mass,data=new)
sum.mod<-dredge(c.mod2)
dim(new)
new
library(MuMIn)
new<-na.omit(Final.dat1)
c.mod2<-lm(C.percent.colony~Comp.1*Axis.2+Comp.2*Axis.2+Comp.3*Axis.2+CN.colony.mass,data=new)
sum.mod<-dredge(c.mod2)
library(ape)
#library(geiger)
#library(ade4)
#library(adephylo)
library(dplyr)
options(na.action = "na.fail")
?left_join
CN<-read.csv("../Data/Latitude_CN-data_cleaned-up-8-19-16.csv")
P<-read.csv("../Data/Latitude_P-data_cleaned-up-8-19-16.csv")
names(CN)
dim(CN)
combined<-left_join(CN,P,by=c("Site","Name"))
dim(combined)
head(combined)
combined<-left_join(CN,P,by=c("Site","Name","rep"))
dim(combined)
names(combined)
head(combined)
write.csv(combined,"../Data/20160823_combined_dataset_CN_P.csv")
